{"version":3,"file":"static/js/599.4e36ebb7.chunk.js","mappings":"4PAIaA,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,+OAaLE,GAAQF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,8PAiBLI,EAAeJ,EAAAA,GAAAA,OAAH,mOAcZK,GAAcL,EAAAA,EAAAA,IAAOM,EAAAA,IAAPN,CAAH,yD,SC3ClBO,EAAgB,CACpBC,OAAQ,IAGGC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBC,EAAY,mCAAG,WAAOC,EAAQC,GAAf,oEACU,KAAzBD,EAAOJ,OAAOM,OADC,uBAGjBC,MAAM,iCAHW,0CAObL,EAASE,EAAOJ,OAAOM,QAPV,OAQnBD,EAAQG,YARW,2CAAH,wDAWlB,OACE,SAAC,KAAD,CAAQT,cAAeA,EAAeG,SAAUC,EAAhD,UACE,UAACZ,EAAD,YACE,SAACG,EAAD,CACEe,KAAK,SACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAAC,KAAD,CAAcJ,KAAK,YAEnB,SAACb,EAAD,CAAcc,KAAK,SAAnB,UACE,SAACb,EAAD,UAKT,E,mCCID,EArCe,WACb,OAA8BiB,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WACHR,IAILS,EAAAA,EAAAA,IAAUT,GAASU,KAAKP,EACzB,GAAE,CAACH,KAGF,SAACW,EAAA,EAAD,CAAKC,GAAG,UAAUC,EAAG,EAArB,SACGT,GACC,SAAC,KAAD,KAEA,UAACO,EAAA,EAAD,CAAKE,EAAG,EAAR,WACE,SAAC3B,EAAD,CAAWC,SAAUc,KAErB,wBACGC,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMb,GAAlC,SACGU,KAFID,EADC,UAYvB,C","sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nexport const Forma = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  margin-left: 20px;\n  margin-top: 10px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid;\n`;\n\nexport const Input = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n\n  padding-left: 8px;\n  padding-right: 8px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 32px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchLabel = styled(AiOutlineSearch)`\n  width: 100%;\n  height: 100%;\n`;\n","import { Formik, ErrorMessage } from 'formik';\n// import { toast } from 'react-toastify';\n// import PropTypes from 'prop-types';\nimport { Forma, Input, SearchButton, SearchLabel } from './Searchbar.styled';\n\nconst initialValues = {\n  search: '',\n};\n\nexport const Searchbar = ({ onSubmit }) => {\n  const handleSubmit = async (values, actions) => {\n    if (values.search.trim() === '') {\n      // toast.warning('Please input name for search.');\n      alert('Please input name for search.');\n      return;\n    }\n\n    await onSubmit(values.search.trim());\n    actions.resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <Forma>\n        <Input\n          name=\"search\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <ErrorMessage name=\"search\" />\n\n        <SearchButton type=\"submit\">\n          <SearchLabel />\n        </SearchButton>\n      </Forma>\n    </Formik>\n  );\n};\n\n// Searchbar.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import { Box } from 'components/Box';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { useState, useEffect } from 'react';\nimport { Outlet, Link, useParams, useLocation } from 'react-router-dom';\nimport { getSearch } from 'services/api';\n\nconst Movies = () => {\n  const [request, setRequest] = useState('');\n  const [movies, setMovies] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!request) {\n      return;\n    }\n\n    getSearch(request).then(setMovies);\n  }, [request]);\n\n  return (\n    <Box as=\"section\" p={3}>\n      {movieId ? (\n        <Outlet />\n      ) : (\n        <Box p={3}>\n          <Searchbar onSubmit={setRequest} />\n\n          <ul>\n            {movies.map(({ id, title }) => (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Movies;\n"],"names":["Forma","styled","Form","Input","Field","SearchButton","SearchLabel","AiOutlineSearch","initialValues","search","Searchbar","onSubmit","handleSubmit","values","actions","trim","alert","resetForm","name","type","autoComplete","autoFocus","placeholder","useState","request","setRequest","movies","setMovies","movieId","useParams","location","useLocation","useEffect","getSearch","then","Box","as","p","map","id","title","to","state","from"],"sourceRoot":""}